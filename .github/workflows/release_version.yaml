name: Release version

on:
  push:
    tags:
      - 'v*'

jobs:

  create_release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
    steps:
    - name: Create release
      id: release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: Release version ${{ github.ref }}
        draft: false
        prerelease: false


  release-linwin:
    runs-on: ubuntu-latest
    needs: create_release
    steps:
    - name: Install required headers
      run: |
        sudo apt-get update
        sudo apt-get -y install build-essential libx11-dev libgl1-mesa-dev xorg-dev

    - id: mingw
      uses: egor-tensin/setup-mingw@2b80576206ed4b8a56507f513f28f68b03cabad8

    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Compile Linux binary
      run: |
        go run build.go -version "${{ github.ref }}"
        mv build/chesseract build/chesseract-linux-x64

    - name: Compile Windows binary
      env:
        CGO_ENABLED: 1
        CXX: ${{steps.mingw.outputs.gxx}}
        CC: ${{steps.mingw.outputs.gcc}}
      run: |
        go run build.go -version "${{ github.ref }}" -GOARCH=amd64 -GOOS=windows
        mv build/chesseract.exe build/chesseract-windows-x64.exe

    - name: Run tests again, just to be sure
      run: go test ./...

    - name: Calculate checksums
      run: sha256sum build/*

    - name: Upload Release Asset (1 of 3)
      id: upload-release-asset-linux
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: build/chesseract-linux-x64
        asset_name: chesseract-${{ github.ref }}-linux-x64
        asset_content_type: application/x-elf
    - name: Upload Release Asset (2 of 3)
      id: upload-release-asset-windows
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: build/chesseract-windows-x64.exe
        asset_name: chesseract-${{ github.ref }}-windows-x64.exe
        asset_content_type: application/x-msdownload

  release-mac:
    runs-on: macos-latest
    needs: create_release
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Compile mac binary
      run: |
        go run build.go -version "${{ github.ref }}"
        mv build/chesseract build/chesseract-darwin-x64

    - name: Run tests again, just to be sure
      run: go test ./...

    - name: Calculate checksums
      run: shasum -a 256 build/*

    - name: Upload Release Asset (3 of 3)
      id: upload-release-asset-mac
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: build/chesseract-darwin-x64
        asset_name: chesseract-${{ github.ref }}-darwin-x64
        asset_content_type: application/x-elf

